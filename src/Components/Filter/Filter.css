/* CYBERPUNK FILTER COMPONENT - NEURAL CLASSIFICATION MATRIX */
.filter-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--space-6);
  padding: var(--space-8);
  background: rgba(17, 24, 39, 0.8);
  border: 2px solid var(--primary-200);
  border-radius: var(--radius-2xl);
  backdrop-filter: blur(20px);
  position: relative;
  overflow: hidden;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4), 0 0 25px rgba(0, 180, 255, 0.2),
    inset 0 0 20px rgba(0, 180, 255, 0.05);
}

.filter-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(
    90deg,
    var(--primary-200),
    var(--accent-400),
    var(--success-400)
  );
  border-radius: var(--radius-2xl) var(--radius-2xl) 0 0;
  animation: filter-header-pulse 3s ease-in-out infinite;
}

.filter-container::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
      rgba(0, 180, 255, 0.03) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(0, 180, 255, 0.03) 1px, transparent 1px);
  background-size: 25px 25px;
  pointer-events: none;
  border-radius: var(--radius-2xl);
  animation: filter-grid-scan 15s linear infinite;
}

@keyframes filter-header-pulse {
  0%,
  100% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
}

@keyframes filter-grid-scan {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-25px, -25px);
  }
}

/* Neural Filter Fields */
.filter-container label {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  font-family: var(--font-family-mono);
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--accent-300);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  position: relative;
  z-index: 1;
}

.filter-container label::before {
  content: "â–¶";
  color: var(--primary-200);
  font-size: var(--text-xs);
  margin-right: var(--space-2);
  animation: label-blink 2s ease-in-out infinite;
}

@keyframes label-blink {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0.3;
  }
}

/* Neural Select Inputs */
.filter-container select {
  padding: var(--space-4) var(--space-5);
  font-family: var(--font-family-secondary);
  font-size: var(--text-base);
  font-weight: 500;
  color: var(--text-primary);
  background: rgba(17, 24, 39, 0.9);
  border: 2px solid var(--border);
  border-radius: var(--radius-lg);
  outline: none;
  transition: all var(--transition-base);
  cursor: pointer;
  backdrop-filter: blur(10px);
  box-shadow: inset 0 0 10px rgba(0, 180, 255, 0.05);
}

.filter-container select:hover {
  border-color: var(--border-hover);
  background: rgba(17, 24, 39, 0.95);
  box-shadow: inset 0 0 15px rgba(0, 180, 255, 0.1),
    0 0 10px rgba(0, 180, 255, 0.2);
}

.filter-container select:focus {
  border-color: var(--primary-200);
  background: rgba(17, 24, 39, 1);
  box-shadow: 0 0 20px rgba(0, 180, 255, 0.3),
    inset 0 0 20px rgba(0, 180, 255, 0.1);
  transform: translateY(-2px);
  text-shadow: 0 0 10px rgba(0, 180, 255, 0.3);
}

.filter-container select option {
  background: rgba(17, 24, 39, 0.95);
  color: var(--text-primary);
  padding: var(--space-2);
  border: none;
}

.filter-container select option:hover {
  background: rgba(0, 180, 255, 0.2);
}

/* Filter Field Animation */
.filter-container label {
  animation: filter-field-entry 0.6s ease-out;
  animation-fill-mode: both;
}

.filter-container label:nth-child(1) {
  animation-delay: 0.1s;
}
.filter-container label:nth-child(2) {
  animation-delay: 0.2s;
}
.filter-container label:nth-child(3) {
  animation-delay: 0.3s;
}
.filter-container label:nth-child(4) {
  animation-delay: 0.4s;
}
.filter-container label:nth-child(5) {
  animation-delay: 0.5s;
}
.filter-container label:nth-child(6) {
  animation-delay: 0.6s;
}

@keyframes filter-field-entry {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .filter-container {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: var(--space-4);
    padding: var(--space-6);
  }

  .filter-container select {
    padding: var(--space-3) var(--space-4);
    font-size: var(--text-sm);
  }
}

@media (max-width: 480px) {
  .filter-container {
    grid-template-columns: 1fr;
    gap: var(--space-4);
    padding: var(--space-4);
  }

  .filter-container label {
    font-size: var(--text-xs);
  }
}
